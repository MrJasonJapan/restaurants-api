@Restaurants.API_HostAddress = https://localhost:7186
@token = CfDJ8JkfaPYyrzRPuEHO__lupszTswtVdlKZqQsF0gHhkRxssUQHZdTfs7mTsH0FNMXp30LLApyFFJ4oIjh8Yjj0-R7jrHrlKFrxO3aUawiONI6uJPMYiMZ-MT80aVBUeWvzCfcu8bMfP8pK3qupaCDSshOM0sAtDHGONuKY5ht_5O1GIiORnJd2DrctK_2UeqRP5d6KD7IBA-xOkg371ldiyEUgL8yCGw-QLNIEY9Z5O4u01_9WEy19OHYorPsZ1V_1oze2i8HlTrrsrN2yUzFGHs4XrJpblnspwY_y1VsLgkbC6SylO4pEzDJg_mGZP1yUDHGssIbB4KMDowwygi0uj4uw7QSHEc1DIeFhXezbCEIJ-jWpaXVtD6sQCW-DFXBD22jSUc7M_DDkFdwodM-xJlP7wHsNqSBl9CoXhNlvcPBB0jSuXZUPYoim7p7VDMl3ZwfY-cQJlTV-7uB-BNubTEIjBUkzS7po6xsq13ETAV91WCP8cf83ylo6Gd3Qurj_RTQ0ZplL8ZQCRlO9Zu-EqTV3ToojTOh6qovH8RSI0v8dMn3tfjZ54ksG_VKlBos_-kAE_Kl9oPUYC39cYx_PAtKyrXs-rcFQmn25rcMUo9VaN29ueDev8rIC4I9HWUDABHbR5hxr4ig3Nz9B7smo0bPm14F_PUn-eKbB-pl8r1069zOPFIKTsJuqH-7Zed7Q0HXXv2wIevNPOodbevEKwE7Q3QShBxPEe1M1yotriTxXgoJxYXxGGOTIO4hhCX0QIKH7znUmzhMtfMixrFKzgqoowjNMqn3566vXxpae8Ynck9aqGklNIX-Dh4L9PBu9f4vxWuMUYfY36bjEv-kbMStJhff_Zf9_LvITFRIhs0k7wmhJ9zUjBUySYgtyPhcPMg

### register new identity user
POST {{Restaurants.API_HostAddress}}/api/identity/register
Content-Type: application/json

{
    "email": "user@test.com",
    "password": "Password1!"
}

### login with user
POST {{Restaurants.API_HostAddress}}/api/identity/login
Content-Type: application/json

{
    "email": "owner@test.com",
    "password": "Password1!"
}

### Get all restaurants
GET {{Restaurants.API_HostAddress}}/api/restaurants

### Get a restaurant by id
GET {{Restaurants.API_HostAddress}}/api/restaurants/3
Authorization: Bearer {{token}}

###
// add new restaurant (not valid)
POST {{Restaurants.API_HostAddress}}/api/restaurants
Content-Type: application/json

{
    "Name": "Ne",
    "Description": "",
    "Category": "Missing Category",
    "HasDelivery": true,
    "ContactEmail": "dummy@@email.com",
    "ContactNumber": "a1234567890",
    "City": "New City",
    "Street": "New Street",
    "PostalCode": "123456"
}

###
// add new restaurant (valid)
POST {{Restaurants.API_HostAddress}}/api/restaurants
Authorization: Bearer {{token}}
Content-Type: application/json

{
    "Name": "Godzila Burger Max by Owner",
    "Description": "Scorching Hot",
    "Category": "Japanese",
    "HasDelivery": true,
    "ContactEmail": "dummy@email.com",
    "ContactNumber": "1234567890",
    "City": "New City",
    "Street": "New Street",
    "PostalCode": "123-4567"
}

###
// update restaurant (not valid)
PATCH {{Restaurants.API_HostAddress}}/api/restaurants/5
Content-Type: application/json

{
    "Name": "12",
    "Description": "",
    "HasDelivery": true
}

###
// update restaurant (valid)
PATCH {{Restaurants.API_HostAddress}}/api/restaurants/3
Content-Type: application/json

{
    "Name": "New Restaurant (edit 1)",
    "Description": "New Restaurant Description (edit 1)",
    "HasDelivery": false
}

###
// delete restaurant
DELETE {{Restaurants.API_HostAddress}}/api/restaurants/13

###
// add a new dish to a restaurant (invalid)
POST {{Restaurants.API_HostAddress}}/api/restaurants/3/dishes
Content-Type: application/json

{
    "Name": "Godzila Cheeese Burger",
    "Description": "Super Cheezy, Super Calorie",
    "Price": -1,
    "KiloCalories": -1
}

###
// add a new dish to a restaurant (valid)
POST {{Restaurants.API_HostAddress}}/api/restaurants/3/dishes
Content-Type: application/json

{
    "Name": "Godzila Cheeese Burger 2",
    "Description": "Super Cheezy, Super Calorie 2",
    "Price": 12.99,
    "KiloCalories": 1200
}

###
// get all dishes for a specific restaurant
GET {{Restaurants.API_HostAddress}}/api/restaurants/3/dishes/
Authorization: Bearer {{token}}

###
// get dish for a specific restaurant
GET {{Restaurants.API_HostAddress}}/api/restaurants/3/dishes/5
Authorization: Bearer {{token}}

###
// remove dishes from a restaurant
DELETE {{Restaurants.API_HostAddress}}/api/restaurants/3/dishes