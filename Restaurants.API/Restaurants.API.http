@Restaurants.API_HostAddress = https://localhost:7186
@token = CfDJ8JkfaPYyrzRPuEHO__lupsztNv3DzidB4YAjnyVCHDOEnF7UVHbGPXBkbEIDwmwLNDOCKOp9xnWLU_k4KylEreDdNYknrpU4ARDMjua77N0nskGCfomdUy6bBOSyV2C8ChBlKhooQoi41o-F3a8RM5DP8RfMqFU0XV-RWCXC4yv1FYuar2rOgjyb6ZHAOqasiIJeWOluX8hdsjgiEDH3LAVhsi9eJQOSZEq7T8VC9IDd4HoEDmrLnD1-cdIz6gMm4vT51MJ5iYQE9ypY5t_5WbP5C9FISgCT0ZDYclV5UuxZdrpLPWHkH7_LHktO1f-JfRQPQd78ntobCFBjog3zMqoPmYmIkOh7bONpjO81mTxbjcUQGkozvVMKXrf6nCLz6v9_iD58BeY1Ujb_D7PvehG8y_WQ0TP5WiaZlfPXFrMjdCM7rqcJA_PZ2Er3xzy_Xiyh6LPTMhBCGIF0A48pTc3_jQo85uSpFho1HiFVdKCavOcZaCY6r8XJsE6_ssqZmiI9z9TiLD7O3Jxwvb1E7me4jlwm585o0gk_CkVsBFVWFOAotGboCs5veITMS5DI6GPtsz9kww3sHqQSs7Nr3RG3bE5nNg6uVthSHpyXKrFsD-RAcrqvV_Fega9de3ke27oO7t2eOdjEPtzoTyhqFOAVc9nuoNBVefKN9p_VnU7kp-iQYY-tEIbKRcwdv8Qes3Wj0sYeNXiCZD-m0usHNmNOAqjfUiRTuCGM6-yGBd6sBLVyY3Un9-Hq7X7ggjcfermeeV5OXZrPEoEQzBPeIDJyeysvPD9jJCytiaov1rLoduA9oqVRNR0cJ2Up8lIc85bcXvE9Uw-WlPweobVUQSsdbwFUi0cRvta5y-V1vfOJVpIBGAaOBvVCPOjMIMMX3g

### register new identity user
POST {{Restaurants.API_HostAddress}}/api/identity/register
Content-Type: application/json

{
    "email": "user@test.com",
    "password": "Password1!"
}

### login with user
POST {{Restaurants.API_HostAddress}}/api/identity/login
Content-Type: application/json

{
    "email": "owner@test.com",
    "password": "Password1!"
}

### Get all restaurants
GET {{Restaurants.API_HostAddress}}/api/restaurants

### Get a restaurant by id
GET {{Restaurants.API_HostAddress}}/api/restaurants/3
Authorization: Bearer {{token}}

###
// add new restaurant (not valid)
POST {{Restaurants.API_HostAddress}}/api/restaurants
Content-Type: application/json

{
    "Name": "Ne",
    "Description": "",
    "Category": "Missing Category",
    "HasDelivery": true,
    "ContactEmail": "dummy@@email.com",
    "ContactNumber": "a1234567890",
    "City": "New City",
    "Street": "New Street",
    "PostalCode": "123456"
}

###
// add new restaurant (valid)
POST {{Restaurants.API_HostAddress}}/api/restaurants
Authorization: Bearer {{token}}
Content-Type: application/json

{
    "Name": "Godzila Burger Max by Owner",
    "Description": "Scorching Hot",
    "Category": "Japanese",
    "HasDelivery": true,
    "ContactEmail": "dummy@email.com",
    "ContactNumber": "1234567890",
    "City": "New City",
    "Street": "New Street",
    "PostalCode": "123-4567"
}

###
// update restaurant (not valid)
PATCH {{Restaurants.API_HostAddress}}/api/restaurants/5
Content-Type: application/json

{
    "Name": "12",
    "Description": "",
    "HasDelivery": true
}

###
// update restaurant (valid)
PATCH {{Restaurants.API_HostAddress}}/api/restaurants/3
Content-Type: application/json

{
    "Name": "New Restaurant (edit 1)",
    "Description": "New Restaurant Description (edit 1)",
    "HasDelivery": false
}

###
// delete restaurant
DELETE {{Restaurants.API_HostAddress}}/api/restaurants/13

###
// add a new dish to a restaurant (invalid)
POST {{Restaurants.API_HostAddress}}/api/restaurants/3/dishes
Content-Type: application/json

{
    "Name": "Godzila Cheeese Burger",
    "Description": "Super Cheezy, Super Calorie",
    "Price": -1,
    "KiloCalories": -1
}

###
// add a new dish to a restaurant (valid)
POST {{Restaurants.API_HostAddress}}/api/restaurants/3/dishes
Content-Type: application/json

{
    "Name": "Godzila Cheeese Burger 2",
    "Description": "Super Cheezy, Super Calorie 2",
    "Price": 12.99,
    "KiloCalories": 1200
}

###
// get all dishes for a specific restaurant
GET {{Restaurants.API_HostAddress}}/api/restaurants/3/dishes/

###
// get dish for a specific restaurant
GET {{Restaurants.API_HostAddress}}/api/restaurants/3/dishes/5

###
// remove dishes from a restaurant
DELETE {{Restaurants.API_HostAddress}}/api/restaurants/3/dishes